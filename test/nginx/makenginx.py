# -*- coding: utf-8 -*-
import json

def generate_nginx_conf(json_data):
    nginx_conf=[]
    nginx_conf.append("# Nginx configuration generated by Python")
    nginx_conf.append("")

    nginx_conf.append("user {};".format(json_data["user"]))
    nginx_conf.append("worker_processes {};".format(json_data["worker_processes"]))
    nginx_conf.append("pid {};".format(json_data["pid"]))
    nginx_conf.append("")

    nginx_conf.append("include {};".format(" ".join(json_data["include"])))
    nginx_conf.append("")
    nginx_conf.append("events {")
    for key, value in json_data["events"].items():
        nginx_conf.append("    {} {};".format(key, value))
    nginx_conf.append("}")
    nginx_conf.append("")

    nginx_conf.append("http {")
    nginx_conf.append("    include {};".format(" ".join(json_data["http"]["include"])))
    nginx_conf.append("    default_type {};".format(json_data["http"]["default_type"]))
    nginx_conf.append("    sendfile {};".format(json_data["http"]["sendfile"]))
    nginx_conf.append("    keepalive_timeout {};".format(json_data["http"]["keepalive_timeout"]))
    nginx_conf.append("    proxy_redirect {};".format(json_data["http"]["proxy_redirect"]))
    nginx_conf.append("")
    nginx_conf.append("    headers {")
    for header, value in json_data["http"]["headers"].items():
        nginx_conf.append("        {} {};".format(header, value))
    nginx_conf.append("    }")
    nginx_conf.append("")

    for server in json_data["http"]["servers"]:
        nginx_conf.append("    server {")
        nginx_conf.append("        listen {};".format(server["listen"]))
        if server["server_name"]!="":
            nginx_conf.append("        server_name {};".format(server["server_name"]))
        if server["ssl"]==True:
            nginx_conf.append("        ssl on;")
            nginx_conf.append("        ssl_certificate {};".format(server["ssl_certificate"]))
            nginx_conf.append("        ssl_certificate_key {};".format(server["ssl_certificate_key"]))
        for location, options in server["locations"].items():
            nginx_conf.append("        location {} {".format(location))
            if "root" in options:
                nginx_conf.append("            root {};".format(options["root"]))
                nginx_conf.append("            index {};".format(options["index"]))
            elif "proxy_pass" in options:
                nginx_conf.append("            proxy_pass {};".format(options["proxy_pass"]))
            if "cors_enabled" in options:
                nginx_conf.append("            cors_enabled {}".format(options["cors_enabled"]))
            if "websocket_enabled" in options:
                nginx_conf.append("            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;")
                nginx_conf.append("            proxy_set_header Host $host;")
                nginx_conf.append("            proxy_set_header Upgrade $http_upgrade;")
                nginx_conf.append("            proxy_set_header Connection upgrade;")
            nginx_conf.append("        }")
        nginx_conf.append("    }")
    nginx_conf.append("}")
    return "\n".join(nginx_conf)